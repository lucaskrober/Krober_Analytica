dados<-read_xlsx('Base_regressaoCLIE.xlsx')
data<-janitor::clean_names(dados)
names(data)
data_num<- data %>%
dplyr::select(fraudador,idade_clie,resu_a,resu_c,resu_n,resu_r,
concen_sacados,prorro_liqui,recomp_liqui,media_taxa,mediana_taxa,moda_taxa,
valo_scon,limi_cred,media_de_valo_face,mediana_de_valo_face,media_de_valo_titu_orig,mediana_de_valo_titu_orig,resu_titu_d,resu_titu_c)
data_num<-as.data.frame(data_num)
row.names(data_num)<-data$clie_id
y<-vector("list",length(2:(ncol(data_num))))
for(i in 2:(ncol(data_num)-1)){
y[[i]]<-group_by(data_num,fraudador) %>%
summarise(
count = n(),
mean = mean(data_num[,i], na.rm = TRUE),
desv.pad = sd(data_num[,i], na.rm = TRUE))
names(y)[i]<-names(data_num)[i]
mann_whitney <- wilcox.test(data_num[,i]~fraudador,
data=data_num,
exact=FALSE,
alternative = "two.sided")
print(mann_whitney)
}
y<-vector("list",length(2:(ncol(data_num))))
for(i in 2:(ncol(data_num)-1)){
y[[i]]<-group_by(data_num,fraudador) %>%
summarise(
count = n(),
mean = mean(data_num[,i], na.rm = TRUE),
desv.pad = sd(data_num[,i], na.rm = TRUE))
names(y)[i]<-names(data_num)[i]
print(y[i])
mann_whitney <- wilcox.test(data_num[,i]~fraudador,
data=data_num,
exact=FALSE,
alternative = "two.sided")
print(mann_whitney)
}
dados<-read_xlsx('Base_regressaoCLIE.xlsx')
data<-janitor::clean_names(dados)
library(explore)
# Para brincar com os dados
# if (interactive())  {
#   explore(data)
# }
#DataExplorer::create_report(data)
names(data)
data_num<- data %>%
dplyr::select(fraudador,idade_clie,resu_a,resu_c,resu_n,resu_r,
concen_sacados,prorro_liqui,recomp_liqui,media_taxa,mediana_taxa,moda_taxa,
valo_scon,limi_cred,media_de_valo_face,mediana_de_valo_face,media_de_valo_titu_orig,mediana_de_valo_titu_orig,resu_titu_d,resu_titu_c)
data_num<-as.data.frame(data_num)
row.names(data_num)<-data$clie_id
y<-vector("list",length(2:(ncol(data_num))))
for(i in 2:(ncol(data_num)-1)){
y[[i]]<-group_by(data_num,fraudador) %>%
summarise(
count = n(),
mean = mean(data_num[,i], na.rm = TRUE),
desv.pad = sd(data_num[,i], na.rm = TRUE))
names(y)[i]<-names(data_num)[i]
print(y[i])
mann_whitney <- wilcox.test(data_num[,i]~fraudador,
data=data_num,
exact=FALSE,
alternative = "two.sided")
print(mann_whitney)
}
data_media<-data_num %>%
dplyr::select(fraudador,idade_clie,resu_a,resu_c,resu_n,resu_r,
concen_sacados,prorro_liqui,recomp_liqui,media_taxa,
valo_scon,limi_cred,media_de_valo_face,
media_de_valo_titu_orig,resu_titu_d,resu_titu_c)
data_mediana<-data_num %>%
dplyr::select(fraudador,idade_clie,resu_a,resu_c,resu_n,resu_r,
concen_sacados,prorro_liqui,recomp_liqui,mediana_taxa,
valo_scon,limi_cred,mediana_de_valo_face,
mediana_de_valo_titu_orig,resu_titu_d,resu_titu_c)
data_moda<-data_num %>%
dplyr::select(fraudador,idade_clie,resu_a,resu_c,resu_n,resu_r,
concen_sacados,prorro_liqui,recomp_liqui,moda_taxa,
valo_scon,limi_cred,resu_titu_d,resu_titu_c)
#####
# Separar o conjunto de dados em dados p teste e validacao
# indices obtidos apos a aleatorizacao
data<-data_media
data_media<-data_num %>%
dplyr::select(fraudador,idade_clie,resu_a,resu_c,resu_n,resu_r,
concen_sacados,prorro_liqui,recomp_liqui,media_taxa,
valo_scon,limi_cred,media_de_valo_face,
media_de_valo_titu_orig)
data_mediana<-data_num %>%
dplyr::select(fraudador,idade_clie,resu_a,resu_c,resu_n,resu_r,
concen_sacados,prorro_liqui,recomp_liqui,mediana_taxa,
valo_scon,limi_cred,mediana_de_valo_face,
mediana_de_valo_titu_orig)
data_moda<-data_num %>%
dplyr::select(fraudador,idade_clie,resu_a,resu_c,resu_n,resu_r,
concen_sacados,prorro_liqui,recomp_liqui,moda_taxa,
valo_scon,limi_cred)
#####
# Separar o conjunto de dados em dados p teste e validacao
# indices obtidos apos a aleatorizacao
data<-data_media
ordena = sort(sample(nrow(data), nrow(data)*.5))
#Dados para o treinamento (fica em branco após a virgula para selecionar todas as colunas)
treinamento<-data[ordena,]
#Dados para a validacao
validacao<-data[-ordena,]
#Regressao Logistica
modelo.completo <- glm(treinamento$fraudador~.,family=binomial,data=treinamento)
#Abordagem Stepwise para selecao de variaveis
stepwise <- step(modelo.completo,direction="both")
ordena = sort(sample(nrow(data), nrow(data)*.6))
#Dados para o treinamento (fica em branco após a virgula para selecionar todas as colunas)
treinamento<-data[ordena,]
#Dados para a validacao
validacao<-data[-ordena,]
#Regressao Logistica
modelo.completo <- glm(treinamento$fraudador~.,family=binomial,data=treinamento)
#Abordagem Stepwise para selecao de variaveis
stepwise <- step(modelo.completo,direction="both")
stepwise$formula
#Abordagem Stepwise para selecao de variaveis
stepwise <- step(modelo.completo,direction="both")
#Regressao Logistica
modelo.completo <- glm(treinamento$fraudador~.,family=binomial,data=data)
#Abordagem Stepwise para selecao de variaveis
stepwise <- step(modelo.completo,direction="both")
data_media<-data_num %>%
dplyr::select(fraudador,idade_clie,
concen_sacados,prorro_liqui,recomp_liqui,media_taxa,
valo_scon,limi_cred,media_de_valo_face,
media_de_valo_titu_orig)
#####
# Separar o conjunto de dados em dados p teste e validacao
# indices obtidos apos a aleatorizacao
data<-data_media
#Regressao Logistica
modelo.completo <- glm(treinamento$fraudador~.,family=binomial,data=data)
View(data)
#Regressao Logistica
modelo.completo <- glm(data$fraudador~.,family=binomial,data=data)
#Abordagem Stepwise para selecao de variaveis
stepwise <- step(modelo.completo,direction="both")
y<-vector("list",length(2:(ncol(data_num))))
for(i in 2:(ncol(data_num)-1)){
y[[i]]<-group_by(data_num,fraudador) %>%
summarise(
count = n(),
mean = mean(data_num[,i], na.rm = TRUE),
desv.pad = sd(data_num[,i], na.rm = TRUE))
names(y)[i]<-names(data_num)[i]
print(y[i])
mann_whitney <- wilcox.test(data_num[,i]~fraudador,
data=data_num,
exact=FALSE,
alternative = "two.sided")
print(mann_whitney)
}
data_media<-data_num %>%
dplyr::select(fraudador,idade_clie,recomp_liqui,
valo_scon,limi_cred,media_de_valo_face)
#####
# Separar o conjunto de dados em dados p teste e validacao
# indices obtidos apos a aleatorizacao
data<-data_media
ordena = sort(sample(nrow(data), nrow(data)*.6))
#Dados para o treinamento (fica em branco após a virgula para selecionar todas as colunas)
treinamento<-data[ordena,]
#Dados para a validacao
validacao<-data[-ordena,]
#Regressao Logistica
modelo.completo <- glm(treinamento$fraudador~.,family=binomial,data=data)
#Regressao Logistica
modelo.completo <- glm(treinamento$fraudador~.,family=binomial,data=treinamento)
#Abordagem Stepwise para selecao de variaveis
stepwise <- step(modelo.completo,direction="both")
stepwise$formula
summary(stepwise)
#Modelo com as variaveis indicadas pelo Stepwise
stepwise <- glm(fraudador ~ idade_clie + recomp_liqui + valo_scon, family=binomial,data=treinamento)
summary(stepwise)
#Modelo com as variaveis indicadas pelo Stepwise
stepwise <- glm(fraudador ~ idade_clie + recomp_liqui, family=binomial,data=treinamento)
summary(stepwise)
#Modelo com as variaveis indicadas pelo Stepwise
stepwise <- glm(fraudador ~ idade_clie + recomp_liqui, family=binomial,data=data)
summary(stepwise)
#Calcula a razãoo de chances (demora um pouco pra calcular)
razao<-exp(cbind(OR = coef(stepwise), confint(stepwise)))
razao
#Calcula a razãoo de chances (demora um pouco pra calcular)
razao<-exp(cbind(OR = coef(stepwise), confint(stepwise)))
razao
#Modelo com as variaveis indicadas pelo Stepwise
stepwise <- glm(fraudador ~ idade_clie + recomp_liqui, family=binomial,data=treinamento)
summary(stepwise)
#Calcula a razãoo de chances (demora um pouco pra calcular)
razao<-exp(cbind(OR = coef(stepwise), confint(stepwise)))
razao
predito<-predict(stepwise,validacao,type="response")
# Se tem variáveis que aparecem como NA na tabela nova, então precisa rodar essas linhas a seguir
predito<-predito[!is.na(predito)]
validacao<-na.omit(validacao)
# salva os valores estimados
pred = prediction(predito, validacao$fraudador)
# define o valor de corte, ou seja, acima desse valor, tudo vai ser considerado 1
corte<-as.numeric(performance(pred, "auc")@y.values)
#cálculo do score no dataset de validacao
validacao$score<-predict(stepwise,type='response',validacao)
summary(validacao$score)
pred<-prediction(validacao$score, validacao$fraudador)
perf <- performance(pred,"tpr","fpr")
plot(perf, colorize=TRUE, print.cutoffs.at=seq(0,1,by=0.1), text.adj=c(-0.2,1.7))
abline( a =0, b = 1, lwd = 2, lty = 2, col = "gray")
#Escolhe quem vai ser "1"e quem vai ser "0"
validacao$predito<-ifelse(predito>=corte,1,0)
tab<-table(validacao$predito,validacao$fraudador)
tab
taxaacerto<-(tab[2,2]+tab[1,1])/sum(tab)
tab
corte
corte<-0.5
#cálculo do score no dataset de validacao
validacao$score<-predict(stepwise,type='response',validacao)
summary(validacao$score)
pred<-prediction(validacao$score, validacao$fraudador)
perf <- performance(pred,"tpr","fpr")
plot(perf, colorize=TRUE, print.cutoffs.at=seq(0,1,by=0.1), text.adj=c(-0.2,1.7))
abline( a =0, b = 1, lwd = 2, lty = 2, col = "gray")
#Escolhe quem vai ser "1"e quem vai ser "0"
validacao$predito<-ifelse(predito>=corte,1,0)
tab<-table(validacao$predito,validacao$fraudador)
tab
taxaacerto<-(tab[2,2]+tab[1,1])/sum(tab)
taxaacerto
validacao$score
summary(validacao$score)
validacao$predito<-as.factor(validacao$predito)
summary(validacao$predito)
# Identificando clientes fraudadores
fraudulentos<-subset(validacao,predito==1)
fraudulentos$TITU_ID<-row.names(fraudulentos)
fraude<-merge(fraudulentos,dados,by='TITU_ID')
dados<-read_xlsx('Base_regressaoCLIE.xlsx')
data<-janitor::clean_names(dados)
data<-read_xlsx('Base_regressaoCLIE.xlsx')
data<-janitor::clean_names(data)
edit(data)
data<-read_xlsx('Base_regressaoCLIE.xlsx')
data<-janitor::clean_names(data)
View(data)
data$media_taxa[21]
data$media_taxa[21]<-3.03/2
library(explore)
if (interactive())  {
explore(data)
}
DataExplorer::create_report(data)
data_num<- data %>%
dplyr::select(fraudador,idade_clie,resu_a,resu_c,resu_n,resu_r,
concen_sacados,prorro_liqui,recomp_liqui,media_taxa,mediana_taxa,moda_taxa,
valo_scon,limi_cred,media_de_valo_face,mediana_de_valo_face,media_de_valo_titu_orig,mediana_de_valo_titu_orig,resu_titu_d,resu_titu_c)
data_num<-as.data.frame(data_num)
row.names(data_num)<-data$clie_id
y<-vector("list",length(2:(ncol(data_num))))
y<-vector("list",length(3:(ncol(data))))
y<-vector("list",length(2:(ncol(data_num))))
y
View(data)
for(i in 2:(ncol(data_num))){
y[[i]]<-group_by(data_num,fraudador) %>%
summarise(
count = n(),
mean = mean(data_num[,i], na.rm = TRUE),
desv.pad = sd(data_num[,i], na.rm = TRUE))
names(y)[i]<-names(data_num)[i]
print(y[i])
mann_whitney <- wilcox.test(data_num[,i]~fraudador,
data=data_num,
exact=FALSE,
alternative = "two.sided")
print(mann_whitney)
}
for(i in 2:(ncol(data_num))){
# y[[i]]<-group_by(data_num,fraudador) %>%
#   summarise(
#     count = n(),
#     mean = mean(data_num[,i], na.rm = TRUE),
#     desv.pad = sd(data_num[,i], na.rm = TRUE))
# names(y)[i]<-names(data_num)[i]
# print(y[i])
mann_whitney <- wilcox.test(data_num[,i]~fraudador,
data=data_num,
exact=FALSE,
alternative = "two.sided")
print(mann_whitney)
}
for(i in 2:(ncol(data_num))){
# y[[i]]<-group_by(data_num,fraudador) %>%
#   summarise(
#     count = n(),
#     mean = mean(data_num[,i], na.rm = TRUE),
#     desv.pad = sd(data_num[,i], na.rm = TRUE))
# names(y)[i]<-names(data_num)[i]
# print(y[i])
print(names(data_num)[i])
mann_whitney <- wilcox.test(data_num[,i]~fraudador,
data=data_num,
exact=FALSE,
alternative = "two.sided")
print(mann_whitney)
}
View(data_num)
data<-read_xlsx('Base_regressaoCLIE.xlsx')
View(data)
data<-janitor::clean_names(data)
data$media_taxa[21]<-3.03/2
data_num<- data %>%
dplyr::select(fraudador,idade_clie,resu_a,resu_c,resu_n,resu_r,
concen_sacados,prorro_liqui,recomp_liqui,media_taxa,mediana_taxa,moda_taxa,
valo_scon,limi_cred,media_de_valo_face,mediana_de_valo_face,media_de_valo_titu_orig,mediana_de_valo_titu_orig,resu_titu_d,resu_titu_c)
data_num<-as.data.frame(data_num)
row.names(data_num)<-data$clie_id
View(data)
for(i in 2:(ncol(data_num))){
# y[[i]]<-group_by(data_num,fraudador) %>%
#   summarise(
#     count = n(),
#     mean = mean(data_num[,i], na.rm = TRUE),
#     desv.pad = sd(data_num[,i], na.rm = TRUE))
# names(y)[i]<-names(data_num)[i]
# print(y[i])
print(names(data_num)[i])
mann_whitney <- wilcox.test(data_num[,i]~fraudador,
data=data_num,
exact=FALSE,
alternative = "two.sided")
print(mann_whitney)
}
View(data)
for(i in 2:(ncol(data_num))){
y[[i]]<-group_by(data_num,fraudador) %>%
summarise(
count = n(),
mean = mean(data_num[,i], na.rm = TRUE),
desv.pad = sd(data_num[,i], na.rm = TRUE))
names(y)[i]<-names(data_num)[i]
print(y[i])
print(names(data_num)[i])
mann_whitney <- wilcox.test(data_num[,i]~fraudador,
data=data_num,
exact=FALSE,
alternative = "two.sided")
print(mann_whitney)
}
View(data)
View(data_num)
for(i in 2:(ncol(data_num))){
# y[[i]]<-group_by(data_num,fraudador) %>%
#   summarise(
#     count = n(),
#     mean = mean(data_num[,i], na.rm = TRUE),
#     desv.pad = sd(data_num[,i], na.rm = TRUE))
# names(y)[i]<-names(data_num)[i]
# print(y[i])
# print(names(data_num)[i])
mann_whitney <- wilcox.test(data_num[,i]~fraudador,
data=data_num,
exact=FALSE,
alternative = "two.sided")
print(mann_whitney)
}
for(i in 2:(ncol(data_num))){
# y[[i]]<-group_by(data_num,fraudador) %>%
#   summarise(
#     count = n(),
#     mean = mean(data_num[,i], na.rm = TRUE),
#     desv.pad = sd(data_num[,i], na.rm = TRUE))
# names(y)[i]<-names(data_num)[i]
# print(y[i])
print(names(data_num)[i])
mann_whitney <- wilcox.test(data_num[,i]~fraudador,
data=data_num,
exact=FALSE,
alternative = "two.sided")
print(mann_whitney)
}
View(data)
#Modelo com as variaveis indicadas pelo Stepwise
stepwise <- glm(fraudador ~ idade_clie + recomp_liqui + moda_taxa +
valo_scon + limi_cred + media_de_valo_face, family=binomial,data=data_num)
summary(stepwise)
stepwise <- glm(fraudador ~ idade_clie + recomp_liqui + moda_taxa +
valo_scon + limi_cred, family=binomial,data=data_num)
summary(stepwise)
stepwise <- glm(fraudador ~ idade_clie + recomp_liqui + moda_taxa +
valo_scon, family=binomial,data=data_num)
stepwise <- glm(fraudador ~ idade_clie + recomp_liqui + moda_taxa +
valo_scon, family=binomial,data=data_num)
summary(stepwise)
step2 <- step(fraudador ~ idade_clie + recomp_liqui + moda_taxa +
valo_scon + limi_cred + media_de_valo_face,direction="both")
#Modelo com as variaveis indicadas pelo Stepwise
stepwise <- glm(fraudador ~ idade_clie + recomp_liqui + moda_taxa +
valo_scon + limi_cred + media_de_valo_face, family=binomial,data=data_num)
step2 <- step(stepwise$formula,direction="both")
step2 <- step(stepwise,direction="both")
summary(step2)
step2 <- step(stepwise,direction="backward")
summary(step2)
stepwise <- glm(fraudador ~ idade_clie + recomp_liqui + moda_taxa +
valo_scon, family=binomial,data=data_num)
summary(stepwise)
razao<-exp(cbind(OR = coef(stepwise), confint(stepwise)))
razao
predito<-predict(stepwise,data_num,type="response")
predito
# salva os valores estimados
pred = prediction(predito, data_num$fraudador)
# define o valor de corte, ou seja, acima desse valor, tudo vai ser considerado 1
corte<-as.numeric(performance(pred, "auc")@y.values)
corte
corte<-0.5
#cálculo do score no dataset de validacao
data_num$score<-predict(stepwise,type='response',data_num)
data_num$score
round(data_num$score,4)
summary(data_num$score)
#Escolhe quem vai ser "1"e quem vai ser "0"
data_num$predito<-ifelse(predito>=corte,1,0)
data_num$predito
tab<-table(data_num$predito,data_num$fraudador)
tab
taxaacerto<-(tab[2,2]+tab[1,1])/sum(tab)
taxaacerto
corte<-0.3
#Escolhe quem vai ser "1"e quem vai ser "0"
data_num$predito<-ifelse(predito>=corte,1,0)
data_num$predito
tab<-table(data_num$predito,data_num$fraudador)
tab
taxaacerto<-(tab[2,2]+tab[1,1])/sum(tab)
taxaacerto
corte<-0.4
#Escolhe quem vai ser "1"e quem vai ser "0"
data_num$predito<-ifelse(predito>=corte,1,0)
tab<-table(data_num$predito,data_num$fraudador)
tab
stepwise <- glm(fraudador ~ idade_clie + recomp_liqui + moda_taxa +
valo_scon, family=binomial,data=data_num)
summary(stepwise)
stepwise <- glm(fraudador ~ idade_clie + recomp_liqui +
valo_scon, family=binomial,data=data_num)
summary(stepwise)
predito<-predict(stepwise,data_num,type="response")
# salva os valores estimados
pred = prediction(predito, data_num$fraudador)
#cálculo do score no dataset de validacao
data_num$score<-predict(stepwise,type='response',data_num);round(data_num$score,4)
summary(data_num$score)
corte<-0.5
#Escolhe quem vai ser "1"e quem vai ser "0"
data_num$predito<-ifelse(predito>=corte,1,0)
tab<-table(data_num$predito,data_num$fraudador)
tab
#Modelo com as variaveis indicadas pelo Stepwise
stepwise <- glm(fraudador ~ idade_clie + recomp_liqui + moda_taxa +
valo_scon + limi_cred + media_de_valo_face, family=binomial,data=data_num)
summary(stepwise)
predito<-predict(stepwise,data_num,type="response")
# salva os valores estimados
pred = prediction(predito, data_num$fraudador)
corte<-0.5
#cálculo do score no dataset de validacao
data_num$score<-predict(stepwise,type='response',data_num);round(data_num$score,4)
#Escolhe quem vai ser "1"e quem vai ser "0"
data_num$predito<-ifelse(predito>=corte,1,0)
tab<-table(data_num$predito,data_num$fraudador)
tab
corte<-0.4
#Escolhe quem vai ser "1"e quem vai ser "0"
data_num$predito<-ifelse(predito>=corte,1,0)
tab<-table(data_num$predito,data_num$fraudador)
tab
corte<-0.3
#Escolhe quem vai ser "1"e quem vai ser "0"
data_num$predito<-ifelse(predito>=corte,1,0)
tab<-table(data_num$predito,data_num$fraudador)
tab
#cálculo do score no dataset de validacao
data_num$score<-predict(stepwise,type='response',data_num);round(data_num$score,4)
# Identificando clientes fraudadores
fraudulentos<-subset(data_num,predito==1)
fraudulentos
row.names(fraudulentos)
# Identificando clientes fraudadores
row.names(data_num) %in% !data_num$predito==data$fraudador
!data_num$predito==data$fraudador
erros<-subset(data_num,!data_num$predito==data$fraudador)
erros
erros<-subset(data_num,!predito==fraudador)
fraude<-subset(erros,predito==1)
fraude
fraude<-subset(erros,predito==1);row.names(fraude)
tab
dplyr::select(fraude,score,fraudador)
novos<-dplyr::select(fraude,score)
novos$cliente<-row.names(novos)
novos
write.csv2(novos,'possiveis_fraudes.csv',row.names=F)
