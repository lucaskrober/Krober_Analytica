ldl_antes,ldl_2014,ldl_atual,hdl_antes,hdl_2014,hdl_atual,
hemoglobina_glicada_antes,hemoglobina_2014,hemoglobina_glicada_atual,
circunferencia_abdominal_antes,circunferencia_abdominal_2014,circunferencia_abdominal_atual,
pep_min,pep_atual,pep_dif,tempo_emagr,idade_cirur
)
data<-as.data.frame(data)
for(i in 3:ncol(data)){
mann_whitney <- wilcox.test(data[,i]~reganho_acima_10pc,
data=data,
exact=FALSE,
alternative = "two.sided")
print(names(data)[i])
print(mann_whitney)
# res <- t.test(data_num[,i] ~ grupo, data = data_num, paired = F)
# print(res)
}
for(i in 3:ncol(data)){
mann_whitney <- wilcox.test(data[,i]~reganho_acima_15pc,
data=data,
exact=FALSE,
alternative = "two.sided")
print(names(data)[i])
print(mann_whitney)
# res <- t.test(data_num[,i] ~ grupo, data = data_num, paired = F)
# print(res)
}
names(data)
data_pre <- data %>%
select(reganho_acima_10pc,reganho_acima_15pc,contains('antes'))
data_2014 <- data %>%
select(reganho_acima_10pc,reganho_acima_15pc,contains('2014'))
data_atual <- data %>%
select(reganho_acima_10pc,reganho_acima_15pc,contains('atual'))
data_atual$pep_atual<-NULL
names(data_pre)<-c('reganho_acima_10pc','reganho_acima_15pc','peso','imc','triglicerides','ldl','hdl','hem_gli','circ_abd')
names(data_2014)<-c('reganho_acima_10pc','reganho_acima_15pc','peso','imc','triglicerides','ldl','hdl','hem_gli','circ_abd')
names(data_atual)<-c('reganho_acima_10pc','reganho_acima_15pc','peso','imc','triglicerides','ldl','hdl','hem_gli','circ_abd')
data_pre$ano<-"antes"
data_2014$ano<-'2014'
data_atual$ano<-"atual"
data<-rbind(data_pre,data_2014,data_atual)
write.xlsx(data,'dados_analise_ultima.xlsx',sheetName = 'sheet 1')
data<-read.xlsx('dados_analise_ultima.xlsx')
data<-read.xlsx('dados_analise_ultima.xlsx',sheetName = 'sheet 1')
View(data)
data<-data[,2:11]
antes_2014<-subset(data,!ano=="atual")
#podemos fazer o teste aos pares: refazer para os outros dois grupos possíveis
for(i in 3:(ncol(antes_2014)-1)){
mann_whitney <- wilcox.test(antes_2014[,i]~ano,
data=antes_2014,
exact=FALSE,
alternative = "two.sided")
print(names(antes_2014)[i])
print(mann_whitney)
# res <- t.test(data_num[,i] ~ grupo, data = data_num, paired = F)
# print(res)
}
names(antes_2014)
mean <- antes_2014 %>%
group_by(ano) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
sd <- antes_2014 %>%
group_by(ano) %>%
summarise_if(is.numeric, sd, na.rm = TRUE)
mean$var<-"mean"
sd$var<-"sd"
df<-rbind(mean,sd)
teste<-as.data.frame(t(df))
teste$variavel<-row.names(teste)
names(teste)<-c('media_2014','media_antes','sd_2014','sd_antes','variavel')
teste<-teste%>%
select(variavel,media_antes,sd_antes,media_2014,sd_2014)
teste<-subset(teste, !variavel=="reganho_acima_10pc" & !variavel=="reganho_acima_15pc" &!variavel=="ano" & !variavel=="var")
row.names(teste)<-1:nrow(teste)
p_valor<-vector(mode="list",length=nrow(teste))
for(i in 3:(ncol(antes_2014)-1)){
mann_whitney <- wilcox.test(antes_2014[,i]~ano,
data=antes_2014,
exact=FALSE,
alternative = "two.sided")
print(names(antes_2014)[i])
print(mann_whitney)
p_valor[i-2]<-mann_whitney$p.value
# res <- t.test(data_num[,i] ~ grupo, data = data_num, paired = F)
# print(res)
}
teste$p_valor<-p_valor
teste$p_valor<-as.numeric(teste$p_valor)
teste$p_valor_arred<-round(teste$p_valor,8)
teste
write.xlsx(teste,'dados_comparados.xlsx',sheetName = '2014 vs antes')
##################
# antes x hoje
rm(list=ls(all=TRUE))
data<-read.xlsx('dados_analise_ultima.xlsx',sheetName = 'sheet 1')
data<-data[,2:11]
antes_2014<-subset(data,!ano=="2014")
#podemos fazer o teste aos pares: refazer para os outros dois grupos possíveis
for(i in 3:(ncol(antes_2014)-1)){
mann_whitney <- wilcox.test(antes_2014[,i]~ano,
data=antes_2014,
exact=FALSE,
alternative = "two.sided")
print(names(antes_2014)[i])
print(mann_whitney)
# res <- t.test(data_num[,i] ~ grupo, data = data_num, paired = F)
# print(res)
}
names(antes_2014)
mean <- antes_2014 %>%
group_by(ano) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
sd <- antes_2014 %>%
group_by(ano) %>%
summarise_if(is.numeric, sd, na.rm = TRUE)
mean$var<-"mean"
sd$var<-"sd"
df<-rbind(mean,sd)
teste<-as.data.frame(t(df))
teste$variavel<-row.names(teste)
names(teste)<-c('media_atual','media_antes','sd_atual','sd_antes','variavel')
teste<-teste%>%
select(variavel,media_antes,sd_antes,media_2014,sd_2014)
teste<-subset(teste, !variavel=="reganho_acima_10pc" & !variavel=="reganho_acima_15pc" &!variavel=="ano" & !variavel=="var")
##################
# antes x hoje
rm(list=ls(all=TRUE))
data<-read.xlsx('dados_analise_ultima.xlsx',sheetName = 'sheet 1')
data<-data[,2:11]
antes_2014<-subset(data,!ano=="2014")
#podemos fazer o teste aos pares: refazer para os outros dois grupos possíveis
for(i in 3:(ncol(antes_2014)-1)){
mann_whitney <- wilcox.test(antes_2014[,i]~ano,
data=antes_2014,
exact=FALSE,
alternative = "two.sided")
print(names(antes_2014)[i])
print(mann_whitney)
# res <- t.test(data_num[,i] ~ grupo, data = data_num, paired = F)
# print(res)
}
names(antes_2014)
mean <- antes_2014 %>%
group_by(ano) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
sd <- antes_2014 %>%
group_by(ano) %>%
summarise_if(is.numeric, sd, na.rm = TRUE)
mean$var<-"mean"
sd$var<-"sd"
df<-rbind(mean,sd)
teste<-as.data.frame(t(df))
teste$variavel<-row.names(teste)
teste
names(teste)<-c('media_antes','media_atual','sd_antes','sd_atual','variavel')
teste<-teste%>%
select(variavel,media_antes,sd_antes,media_atual,sd_atual)
teste<-subset(teste, !variavel=="reganho_acima_10pc" & !variavel=="reganho_acima_15pc" &!variavel=="ano" & !variavel=="var")
row.names(teste)<-1:nrow(teste)
teste
p_valor<-vector(mode="list",length=nrow(teste))
for(i in 3:(ncol(antes_2014)-1)){
mann_whitney <- wilcox.test(antes_2014[,i]~ano,
data=antes_2014,
exact=FALSE,
alternative = "two.sided")
print(names(antes_2014)[i])
print(mann_whitney)
p_valor[i-2]<-mann_whitney$p.value
# res <- t.test(data_num[,i] ~ grupo, data = data_num, paired = F)
# print(res)
}
teste$p_valor<-p_valor
teste$p_valor<-as.numeric(teste$p_valor)
teste$p_valor_arred<-round(teste$p_valor,8)
teste
write.xlsx(teste,'dados_comparados.xlsx',sheetName = 'antes vs atual')
# 2014 x hoje
rm(list=ls(all=TRUE))
data<-read.xlsx('dados_analise_ultima.xlsx',sheetName = 'sheet 1')
data<-data[,2:11]
antes_2014<-subset(data,!ano=="antes")
#podemos fazer o teste aos pares: refazer para os outros dois grupos possíveis
for(i in 3:(ncol(antes_2014)-1)){
mann_whitney <- wilcox.test(antes_2014[,i]~ano,
data=antes_2014,
exact=FALSE,
alternative = "two.sided")
print(names(antes_2014)[i])
print(mann_whitney)
# res <- t.test(data_num[,i] ~ grupo, data = data_num, paired = F)
# print(res)
}
names(antes_2014)
mean <- antes_2014 %>%
group_by(ano) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
sd <- antes_2014 %>%
group_by(ano) %>%
summarise_if(is.numeric, sd, na.rm = TRUE)
mean$var<-"mean"
sd$var<-"sd"
df<-rbind(mean,sd)
teste<-as.data.frame(t(df))
teste$variavel<-row.names(teste)
teste
names(teste)<-c('media_2014','media_atual','sd_2014','sd_atual','variavel')
teste<-teste%>%
select(variavel,media_2014,sd_2014,media_atual,sd_atual)
teste<-subset(teste, !variavel=="reganho_acima_10pc" & !variavel=="reganho_acima_15pc" &!variavel=="ano" & !variavel=="var")
row.names(teste)<-1:nrow(teste)
teste
p_valor<-vector(mode="list",length=nrow(teste))
for(i in 3:(ncol(antes_2014)-1)){
mann_whitney <- wilcox.test(antes_2014[,i]~ano,
data=antes_2014,
exact=FALSE,
alternative = "two.sided")
print(names(antes_2014)[i])
print(mann_whitney)
p_valor[i-2]<-mann_whitney$p.value
# res <- t.test(data_num[,i] ~ grupo, data = data_num, paired = F)
# print(res)
}
teste$p_valor<-p_valor
teste$p_valor<-as.numeric(teste$p_valor)
teste$p_valor_arred<-round(teste$p_valor,8)
teste
write.xlsx(teste,'dados_comparados.xlsx',sheetName = '2014 vs atual')
setwd("D:/Consultorias/Bianca Carmona/Dados finais")
##################
# antes x hoje
rm(list=ls(all=TRUE))
# antes x 2014
data<-read.xlsx('dados_analise_ultima.xlsx',sheetName = 'sheet 1')
data<-data[,2:11]
antes_2014<-subset(data,!ano=="atual")
#podemos fazer o teste aos pares: refazer para os outros dois grupos possíveis
for(i in 3:(ncol(antes_2014)-1)){
mann_whitney <- wilcox.test(antes_2014[,i]~ano,
data=antes_2014,
exact=FALSE,
alternative = "two.sided")
print(names(antes_2014)[i])
print(mann_whitney)
# res <- t.test(data_num[,i] ~ grupo, data = data_num, paired = F)
# print(res)
}
names(antes_2014)
mean <- antes_2014 %>%
group_by(ano) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
sd <- antes_2014 %>%
group_by(ano) %>%
summarise_if(is.numeric, sd, na.rm = TRUE)
mean$var<-"mean"
sd$var<-"sd"
df<-rbind(mean,sd)
teste<-as.data.frame(t(df))
teste$variavel<-row.names(teste)
names(teste)<-c('media_2014','media_antes','sd_2014','sd_antes','variavel')
teste<-teste%>%
select(variavel,media_antes,sd_antes,media_2014,sd_2014)
teste<-subset(teste, !variavel=="reganho_acima_10pc" & !variavel=="reganho_acima_15pc" &!variavel=="ano" & !variavel=="var")
row.names(teste)<-1:nrow(teste)
p_valor<-vector(mode="list",length=nrow(teste))
for(i in 3:(ncol(antes_2014)-1)){
mann_whitney <- wilcox.test(antes_2014[,i]~ano,
data=antes_2014,
exact=FALSE,
alternative = "two.sided")
print(names(antes_2014)[i])
print(mann_whitney)
p_valor[i-2]<-mann_whitney$p.value
# res <- t.test(data_num[,i] ~ grupo, data = data_num, paired = F)
# print(res)
}
teste$p_valor<-p_valor
teste$p_valor<-as.numeric(teste$p_valor)
teste$p_valor_arred<-round(teste$p_valor,8)
teste
write.xlsx(teste,'dados_comparados.xlsx',sheetName = '2014 vs antes')
write.xlsx(teste,'dados_comparados.xlsx',sheetName = '2014 vs antes')
##################
# antes x hoje
rm(list=ls(all=TRUE))
data<-read.xlsx('dados_analise_ultima.xlsx',sheetName = 'sheet 1')
data<-data[,2:11]
antes_2014<-subset(data,!ano=="2014")
#podemos fazer o teste aos pares: refazer para os outros dois grupos possíveis
for(i in 3:(ncol(antes_2014)-1)){
mann_whitney <- wilcox.test(antes_2014[,i]~ano,
data=antes_2014,
exact=FALSE,
alternative = "two.sided")
print(names(antes_2014)[i])
print(mann_whitney)
# res <- t.test(data_num[,i] ~ grupo, data = data_num, paired = F)
# print(res)
}
names(antes_2014)
mean <- antes_2014 %>%
group_by(ano) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
sd <- antes_2014 %>%
group_by(ano) %>%
summarise_if(is.numeric, sd, na.rm = TRUE)
mean$var<-"mean"
sd$var<-"sd"
df<-rbind(mean,sd)
teste<-as.data.frame(t(df))
teste$variavel<-row.names(teste)
teste
names(teste)<-c('media_antes','media_atual','sd_antes','sd_atual','variavel')
teste<-teste%>%
select(variavel,media_antes,sd_antes,media_atual,sd_atual)
teste<-subset(teste, !variavel=="reganho_acima_10pc" & !variavel=="reganho_acima_15pc" &!variavel=="ano" & !variavel=="var")
row.names(teste)<-1:nrow(teste)
teste
p_valor<-vector(mode="list",length=nrow(teste))
for(i in 3:(ncol(antes_2014)-1)){
mann_whitney <- wilcox.test(antes_2014[,i]~ano,
data=antes_2014,
exact=FALSE,
alternative = "two.sided")
print(names(antes_2014)[i])
print(mann_whitney)
p_valor[i-2]<-mann_whitney$p.value
# res <- t.test(data_num[,i] ~ grupo, data = data_num, paired = F)
# print(res)
}
teste$p_valor<-p_valor
teste$p_valor<-as.numeric(teste$p_valor)
teste$p_valor_arred<-round(teste$p_valor,8)
teste
write.xlsx(teste,'dados_comparados.xlsx',sheetName = 'antes vs atual',append=TRUE,row.names=FALSE)
# 2014 x hoje
rm(list=ls(all=TRUE))
data<-read.xlsx('dados_analise_ultima.xlsx',sheetName = 'sheet 1')
data<-data[,2:11]
antes_2014<-subset(data,!ano=="antes")
#podemos fazer o teste aos pares: refazer para os outros dois grupos possíveis
for(i in 3:(ncol(antes_2014)-1)){
mann_whitney <- wilcox.test(antes_2014[,i]~ano,
data=antes_2014,
exact=FALSE,
alternative = "two.sided")
print(names(antes_2014)[i])
print(mann_whitney)
# res <- t.test(data_num[,i] ~ grupo, data = data_num, paired = F)
# print(res)
}
names(antes_2014)
mean <- antes_2014 %>%
group_by(ano) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
sd <- antes_2014 %>%
group_by(ano) %>%
summarise_if(is.numeric, sd, na.rm = TRUE)
mean$var<-"mean"
sd$var<-"sd"
df<-rbind(mean,sd)
teste<-as.data.frame(t(df))
teste$variavel<-row.names(teste)
teste
names(teste)<-c('media_2014','media_atual','sd_2014','sd_atual','variavel')
teste<-teste%>%
select(variavel,media_2014,sd_2014,media_atual,sd_atual)
teste<-subset(teste, !variavel=="reganho_acima_10pc" & !variavel=="reganho_acima_15pc" &!variavel=="ano" & !variavel=="var")
row.names(teste)<-1:nrow(teste)
teste
p_valor<-vector(mode="list",length=nrow(teste))
for(i in 3:(ncol(antes_2014)-1)){
mann_whitney <- wilcox.test(antes_2014[,i]~ano,
data=antes_2014,
exact=FALSE,
alternative = "two.sided")
print(names(antes_2014)[i])
print(mann_whitney)
p_valor[i-2]<-mann_whitney$p.value
# res <- t.test(data_num[,i] ~ grupo, data = data_num, paired = F)
# print(res)
}
teste$p_valor<-p_valor
teste$p_valor<-as.numeric(teste$p_valor)
teste$p_valor_arred<-round(teste$p_valor,8)
teste
write.xlsx(
teste,
'dados_comparados.xlsx',
sheetName = '2014 vs atual',
append = TRUE,
row.names = FALSE
)
write.xlsx(
teste,
'dados_comparados.xlsx',
sheetName = '2014 vs atual',
append = TRUE,
row.names = FALSE
)
pacotes <- c("dplyr","readxl","xlsx","modEva","janitor")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
pacotes <- c("dplyr", "readxl", "xlsx", "modEvA", "janitor")
if (sum(as.numeric(!pacotes %in% installed.packages())) != 0) {
instalador <- pacotes[!pacotes %in% installed.packages()]
for (i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
setwd("~/GitHub/Krober_Analytica/1-Credit_Risk")
# Função para instalar se não estiverem instalados e carregar logo em seguida
if (sum(as.numeric(!pacotes %in% installed.packages())) != 0) {
instalador <- pacotes[!pacotes %in% installed.packages()]
for (i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
# Carregando a base de dados de clientes inativos para ajuste
data <- read_xlsx('Base_regressaoCLIE_Inativos.xlsx')
data <- janitor::clean_names(data) # limpando os nomes das colunas
# Removendo essas colunas
data_num <- data %>%
dplyr::select(-clie_id,
-resu_a,
-resu_c,
-resu_n,
-resu_r,
-resu_titu_d,
-resu_titu_c)
# Convertendo tibble em data frame
data_num <- as.data.frame(data_num)
# Salvando o clie_id
row.names(data_num) <- data$clie_id
# Regressão logística: criando o modelo com todas as colunas
modelo.completo <- glm(fraudador ~ ., family = binomial, data = data_num)
summary(modelo.completo)
#Abordagem Stepwise para selecao de variaveis
stepwise <- step(modelo.completo, direction = "both")
stepwise$formula #retornar o modelo gerado
summary(stepwise) #resumo da regressão com significâncias de cada variável
#Modelo com as variaveis indicadas pelo Stepwise
stepwise <- glm(stepwise$formula, family = binomial, data = data_num)
summary(stepwise)
predito <- predict(stepwise, data_num, type = "response")
# Corte definido como 0.3 para um perfil conservador
corte <- 0.3
# Cálculo do score no dataset de validacao
data_num$score <-
predict(stepwise, type = 'response', data_num)
round(data_num$score, 4)
summary(data_num$score)
# Escolhe quem vai ser "1"e quem vai ser "0" para o cálculo da matriz de confusão
data_num$predito <- ifelse(predito >= corte, 1, 0)
# Comparando os resultados, matriz de confusão
tab <- table(data_num$predito, data_num$fraudador);tab
# Taxa de acerto
taxa <- (tab[2, 2] + tab[1, 1]) / sum(tab); taxa
prev_fraude <- subset(data_num, predito == 0)
prev_errado <- subset(prev_fraude, fraudador == 1)
# Verdadeiros positivos para fraudadores / total de fraudadores
recursao <- tab[2, 2] / (tab[2, 2] + tab[1, 2]);recursao
# Verdadeiros positivos para fraudadores / total de caracterizados como fraudadores pelo modelo
precisao <- tab[2, 2] / (tab[2, 2] + tab[2, 1]);precisao
# Cálculo do pseudo-R²: significa o quanto (em %) as variáveis do modelo explicaram a variável dependente
RsqGLM(stepwise)
?RsqGLM
# Cálculo do pseudo-R²: significa o quanto (em %) as variáveis do modelo explicaram a variável dependente
RsqGLM(stepwise,plot=FALSE)
dir()
save(stepwise,file='modelo_stepwise.rda')
# Vetor contendo pacotes usados no script de aplicação
pacotes <- c("dplyr", "readxl", "xlsx", "janitor")
# Função para instalar se não estiverem instalados e carregar logo em seguida
if (sum(as.numeric(!pacotes %in% installed.packages())) != 0) {
instalador <- pacotes[!pacotes %in% installed.packages()]
for (i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
# Carregando o modelo já ajustado na base anterior
load(file='modelo_stepwise.rda');
# Carregando a base de dados de clientes ATIVOS:
data <- readxl::read_xlsx('Base_regressaoCLIE.xlsx')
# Limpando os nomes das clunas
data <- janitor::clean_names(data)
#Calculando o score pelo modelo ajustado, agora para os clientes ativos
data$score <-
predict(stepwise, type = 'response', data)
round(data$score, 4)
summary(data$score)
data$score
View(data)
R.version
library(xlsx)
